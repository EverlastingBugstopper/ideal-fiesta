extend schema
  @link(url: "https://specs.apollo.dev/link/v1.0", import: ["Purpose"])
  @link(
    url: "https://specs.apollo.dev/federation/v2.0"
    import: ["@key", "@composeDirective"]
  )
  @link(url: "https://specs.router-authz.dev/authz/v1.0", for: EXECUTION)
  @composeDirective(name: "@authz")

# TODO repeatable
directive @authz(scope: [String!]) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

type Query {
  products: [Product]
}

type Mutation {
  editProduct(input: ProductInput): EditProductPayload
    @authz(scope: ["ADMIN", "EDITOR"])
}

type Product @key(fields: "id") {
  id: ID!
  name: String
  price: String
  inventory: Int @authz(scope: "ADMIN")
}

input ProductInput {
  name: String
  price: String @authz(scope: ["ADMIN", "EDITOR"])
  inventory: Int @authz(scope: ["ADMIN"])
}

type EditProductPayload {
  success: Boolean!
  product: Product
}
